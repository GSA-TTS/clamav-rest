name: Build, Push Container image to DockerHub and deploy to DEV

on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: "clamav-rest"

  REGISTRY_USER: ajilaag
  REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:

  build:

    runs-on: ubuntu-latest
      
    outputs:
      image_digest: ${{ steps.container_metadata.outputs.digest }}
      image_tags: ${{ steps.meta_dev.outputs.tags }}

    steps:
    - uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta_dev
      uses: docker/metadata-action@v4
      with:
        images: ajilaag/${{ env.IMAGE_NAME }}
        tags: type=raw,value={{date 'YYYYMMDD'}}

    - name: Build and push to DockerHub
      id: container_metadata
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta_dev.outputs.tags }}
        labels: ${{ steps.meta_dev.outputs.labels }}

    - name: print container_metadata_imageid
      run: echo "${{steps.container_metadata.outputs.imageid}}"

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   env:
  #     ENVIRONMENT: dev

  #   steps:
  #     - name: Trigger the update workflow DEV
  #       # get workflow id with `gh workflow list --repo user/repo`
  #       run: |
  #         curl \
  #         -X POST \
  #         -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
  #         -H "Accept: application/vnd.github.v3+json" \
  #         https://api.github.com/repos/ajilach/ajila-cloud-kubernetes-${{ env.ENVIRONMENT }}/actions/workflows/29528836/dispatches \
  #         -d '{"ref":"master","inputs":{"application":"ajila-cloud-clamav","image_digest":"${{ needs.build.outputs.image_digest }}","image_tags":"${{ needs.build.outputs.image_tags }}"}}'
        

  # slack-workflow-status:
  #   permissions: read-all
  #   if: always()
  #   name: Post Workflow Status To Slack
  #   needs:
  #     - build
  #     - deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Slack Workflow Notification
  #       uses: Gamesight/slack-workflow-status@v1.1.0
  #       with:
  #         # Required Input
  #         repo_token: ${{secrets.GITHUB_TOKEN}}
  #         slack_webhook_url: ${{secrets.SLACK_WEBHOOK}}